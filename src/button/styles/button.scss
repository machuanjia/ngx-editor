// stylelint-disable selector-no-qualifying-type
//
// Base styles
//
.btn {
    // 设置 icon 字体大小
    i, .wtf {
        font-size: $font-size-base;
        line-height: 1rem;
        // @include button-icon-margin(0.375rem);
    }
    display: inline-block;
    font-weight: $btn-font-weight;
    text-align: center;
    white-space: nowrap;
    vertical-align: middle;
    user-select: none;
    border: $btn-border-width solid transparent;
    @include button-size($btn-padding-y, $btn-padding-x, $font-size-base, $btn-line-height, $btn-border-radius);
    @include transition($btn-transition); // Share hover and focus styles
    @include hover-focus {
        text-decoration: none;
    }
    &:focus,
    &.focus {
        outline: 0; // box-shadow: $btn-focus-box-shadow;
    } // Disabled comes first so active can properly restyle
    &.disabled,
    &:disabled {
        color: $btn-disabled-color;
        background-color: $btn-disabled-bg-color;
        border-color: $btn-disabled-border-color; // opacity: $btn-disabled-opacity;
        @include box-shadow(none);
    } // Opinionated: add "hand" cursor to non-disabled .btn elements
    &:not(:disabled):not(.disabled) {
        cursor: pointer;
    }
    &:not(:disabled):not(.disabled):active,
    &:not(:disabled):not(.disabled).active {
        background-image: none; // @include box-shadow($btn-active-box-shadow);
        // &:focus {
        //     @include box-shadow($btn-focus-box-shadow, $btn-active-box-shadow);
        // }
    }
} 

.btn.btn-has-icon {
    i, .wtf {
        @include button-icon-margin(0.375rem);
    } 
}

// Future-proof disabling of clicks on `<a>` elements
a.btn.disabled,
fieldset:disabled a.btn {
    pointer-events: none;
}


//
// Alternate buttons
//

@each $color, $value in $theme-colors {
    .btn-#{$color} {
      @include button-variant($white, $white, $value, $value, $value, $value, $value, $value);
      @include button-hover-box-shadow($value);
    }
}
  
@each $color, $value in $theme-colors {
    .btn-outline-#{$color} {
      @include button-outline-variant($value, $value, $white, $value, null, $value, null);
    }
}

.btn-outline-default {
    @include button-outline-variant($gray-600, $gray-300, $primary, null, $primary, null, $primary);
}

// .btn-primary {
//     @include button-variant($white, $white, $primary, $primary, $primary, $primary, $primary, $primary);
//     @include button-hover-box-shadow($primary);
// }

// .btn-warning {
//     @include button-variant($white, $white, $warning, $warning, $warning, $warning, $warning, $warning);
// }

// .btn-success {
//     @include button-variant($white, $white, $success, $success, $success, $success, $success, $success);
// }

// .btn-danger {
//     @include button-variant($white, $white, $danger, $danger, $danger, $danger, $danger, $danger);
//     @include button-hover-box-shadow($danger);
// }

// // $color, $border-color, $hover-color, $hover-background, 
// // $hover-border, $active-background, $active-border
// .btn-outline-primary {
//     @include btn-normal-radius();
//     @include button-outline-variant($primary, $primary, $white, $primary, null, $primary, null);
// }

// .btn-outline-default {
//     @include button-outline-variant($gray-600, $gray-300, $primary, null, $primary, null, $primary);
// }

// .btn-outline-info {
//     border-radius: $border-radius;
//     @include button-outline-variant($primary, $primary, $white, $primary, null, $primary, null);
// }

// 圆角方正，回归正常的圆角
.btn-square {
    @include btn-square-radius();
}

//
// Button Sizes
//
.btn-lg {
    @include button-size($btn-padding-y-lg, $btn-padding-x-lg, $font-size-lg, $btn-line-height-lg, $btn-border-radius-lg);
}

.btn-md {
    @include button-size($btn-padding-y-md, $btn-padding-x-md, $font-size-base, $btn-line-height, $btn-border-radius);
}

.btn-sm {
    @include button-size($btn-padding-y-sm, $btn-padding-x-sm, $font-size-sm, $btn-line-height-sm, $btn-border-radius-sm);
}

//
// Link buttons
//
// Make a button look and behave like a link
.btn-link {
    font-weight: $font-weight-normal;
    color: $link-color;
    background-color: transparent;
    @include hover {
        color: $link-hover-color;
        text-decoration: $link-hover-decoration;
        background-color: transparent;
        border-color: transparent;
    }
    &:focus,
    &.focus {
        text-decoration: $link-hover-decoration;
        border-color: transparent;
        box-shadow: none;
    }
    &:disabled,
    &.disabled {
        color: $btn-link-disabled-color;
    } // No need for an active state here
}

.btn-link.btn-link-info {
    @include btn-link-variant($info, $primary, none);
}

.btn-link.btn-link-default {
    @include btn-link-variant($btn-link-color-default, $primary, none);
}

//
// Block button
//
.btn-block {
    display: block;
    width: 100%; // Vertically space out multiple block buttons
    +.btn-block {
        margin-top: $btn-block-spacing-y;
    }
}

// Specificity overrides
input[type="submit"],
input[type="reset"],
input[type="button"] {
    &.btn-block {
        width: 100%;
    }
}

@import './button-icon';